apply plugin: 'kotlin-kapt'


//Kotlin项目中的配置方式 ARouter
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}


ext {

    //Kotlin项目中的配置方式 ARouter
    android {
        defaultConfig {
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = [AROUTER_MODULE_NAME: project.getName()]
                }
            }
        }
    }

    dependencies {
        //==========================================================================================
        // 默认
        //==========================================================================================
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        implementation 'androidx.appcompat:appcompat:1.1.0'
        implementation 'androidx.core:core-ktx:1.1.0'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'androidx.test.ext:junit:1.1.1'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

        //==========================================================================================
        // 引入model
        //==========================================================================================
        implementation 'com.allens:logger:1.0.0'
        implementation 'com.allens:base:1.0.0'
        implementation 'com.allens:http:1.0.0'
        implementation 'com.allens:web:1.0.0'
        implementation 'com.allens:dialog:1.0.0'

//        implementation project(":model_base")
//        implementation project(":model_http")
//        implementation project(":model_webview")
//        implementation project(":model_dialog")
        implementation project(":model_s3")


        //==========================================================================================
        // UI
        //==========================================================================================
        // 轮播图 link {https://github.com/youth5201314/banner}
        implementation 'com.youth.banner:banner:1.4.10'  //最新版本
        // 下拉刷新 link{https://github.com/scwang90/SmartRefreshLayout/tree/master#简单用例}
        implementation 'com.scwang.smart:refresh-layout-kernel:2.0.0-alpha-1'       //核心必须依赖
        implementation 'com.scwang.smart:refresh-header-classics:2.0.0-alpha-1'     //经典刷新头


        //==========================================================================================
        // 其他第三方
        //==========================================================================================

        //屏幕适配 {@link https://github.com/JessYanCoding/AndroidAutoSize}
        implementation 'me.jessyan:autosize:1.1.2'

        //腾讯出品 link(https://github.com/Tencent/MMKV/blob/master/readme_cn.md)
        implementation 'com.tencent:mmkv:1.0.23'


        //阿里路由
        //https://github.com/alibaba/ARouter/blob/master/README_CN.md
        // 替换成最新版本, 需要注意的是api
        // 要与compiler匹配使用，均使用最新版可以保证兼容
        implementation 'com.alibaba:arouter-api:1.5.0'
        kapt 'com.alibaba:arouter-compiler:1.2.2'


        //==========================================================================================
        // jetPack
        //==========================================================================================
        //room
//        def room_version = "2.2.0-rc01"
//        implementation "androidx.room:room-runtime:$room_version"
//        annotationProcessor "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    }
}